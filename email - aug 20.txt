The project is made up entirely of the kits provided, and aims to maximize understanding 
of how to use what's inside while not being overwhelming. The final product is an Arduino 
that reads sensors in and outputs the se;ected sensor to a dial, like those in car dashboards. 
Because there is only one motor per kit, only one sensor can be shown at a time. 

My current design uses three sensors, (a potentiometer, a light sensor, and a capacitive 
touch sensor), a switch, push-button, and 3 LEDs. There is a DPST switch, which selects 
between the touch sensor and the light sensor. If a button is pressed, it will use the 
potentiometer value instead of either of those. When a sensor is selected, the LED for 
that sensor is lit up and data will be read and then output to a servo motor. 

With documentation and spacing included, my code to drive all this is around 100 lines. 
I tried to make it easy to seperate the code for each sensor if that is needed, so if you'd 
like, it would be no problem at all to change the number or types of inputs and outputs.

I've attached the code and an image of my breadboard for reference as to how complicated it 
is. I wasn't sure of the experience of the students we'll be working with, so I tried to keep 
it simple. All the sensors are at the lower end of the breadboard except for the touch sensor, 
which goes off to connect to a piece of metal. I also disconnected the motor for the picture. 
The touch sensor can connect to any conductive object and still work; something I've seen people 
do is make an image or shape out of aluminum foil - when connected to the wire, it will detect 
touches as well as how far away a hand is. If it would help, I can make a fritzing breadboard 
schematic for this too.

---

Update Sept 2:
Project main goal: see how this stuff works, prototyping.
Final project is something that involves some interactivity.
About 10 in class, but may change. One is virtual.
Date for class: 17 sept or 27 sept at 3:00
